/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CommerceApp;

import Adapters.FrameAdapter;
import Adapters.JDBCAdapter;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import util.FileProcess;
import util.Operation;
import util.Utilities;

/**
 *
 * @author DELL
 */
public class FenetrePrincipale extends javax.swing.JFrame {
    static JFrame parentFrame;
    /**
     * Creates new form FenetrePrincipale
     */
    public FenetrePrincipale() {    
        initComponents();
        setIconImage(Utilities.setIconImage(this));
        this.setExtendedState(MAXIMIZED_BOTH);
        //FrameAdapter.centerFrame(this);
        parentFrame = this;   
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator12 = new javax.swing.JSeparator();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JPopupMenu.Separator();
        ImportMenuItem = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        searchMenuItem = new javax.swing.JMenuItem();
        ProductMenu = new javax.swing.JMenu();
        listProductMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        newProductMenuItem = new javax.swing.JMenuItem();
        modifyProductMenuItem = new javax.swing.JMenuItem();
        deleteProductMenuItem = new javax.swing.JMenuItem();
        consultMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        statisticProductMenuItem = new javax.swing.JMenuItem();
        stockProductMenuItem = new javax.swing.JMenuItem();
        searchProductMenuItem = new javax.swing.JMenuItem();
        ProviderMenu = new javax.swing.JMenu();
        listProviderMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        newProviderMenuItem = new javax.swing.JMenuItem();
        modifyProviderMenuItem = new javax.swing.JMenuItem();
        deleteProviderMenuItem = new javax.swing.JMenuItem();
        consultProviderMenuItem5 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        providerSituationMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        nouveauVersementFournisseurMenuItem = new javax.swing.JMenuItem();
        chercherversementMenuItem = new javax.swing.JMenuItem();
        buyPerProviderMenuItem = new javax.swing.JMenuItem();
        providerSearchMenuItem = new javax.swing.JMenuItem();
        CustomerMenu = new javax.swing.JMenu();
        listCustomerMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        newCustomerMenuItem = new javax.swing.JMenuItem();
        modifyCustomerMenuItem = new javax.swing.JMenuItem();
        deleteCustomerMenuItem = new javax.swing.JMenuItem();
        consultCustomerMenuItem = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        customerSituationMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        newWidthDrawelMenuItem = new javax.swing.JMenuItem();
        searchWidthDrawelMenuItem = new javax.swing.JMenuItem();
        sellsPerCustomerMenuItem = new javax.swing.JMenuItem();
        customerSearchMenuItem = new javax.swing.JMenuItem();
        SellMenu = new javax.swing.JMenu();
        listBuyMenuItem = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        newBuyMenuItem = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        listReturnSellMenuItem = new javax.swing.JMenuItem();
        retourAchatMenuItem = new javax.swing.JMenuItem();
        deletedModifiedBUY = new javax.swing.JMenuItem();
        BuyMenu = new javax.swing.JMenu();
        listSellMenuItem = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        newSellMenuItem = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        listRetrunBuyMenuItem = new javax.swing.JMenuItem();
        retourVenteMenuItem = new javax.swing.JMenuItem();
        compoirSellMenuItem = new javax.swing.JMenuItem();
        deletedSellMenuItem = new javax.swing.JMenuItem();
        CostsMenu = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JPopupMenu.Separator();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        LostsMenu = new javax.swing.JMenu();
        mouvementMenu = new javax.swing.JMenu();
        dayMouvementMenuItem = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        graphRecetteMenuItem = new javax.swing.JMenuItem();
        jSeparator17 = new javax.swing.JPopupMenu.Separator();
        BenificeMenuItem = new javax.swing.JMenuItem();
        DayBeneficeMenuItem = new javax.swing.JMenuItem();
        WeekBeneficeMenuItem = new javax.swing.JMenuItem();
        MonthBeneficeMenuItem = new javax.swing.JMenuItem();
        YearBeneficeMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        saveDataBaseMenuItem = new javax.swing.JMenuItem();
        restorDataBaseMenuItem = new javax.swing.JMenuItem();
        emtyDataBaseMenuItem = new javax.swing.JMenuItem();
        parameterMenuItem = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSaveProcTrig = new javax.swing.JMenuItem();
        archiveMenuItem = new javax.swing.JMenuItem();
        createTables = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("MessageBundle"); // NOI18N
        setTitle(bundle.getString("GESTION COMMERCIAL")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );

        menuBar.setNextFocusableComponent(FileMenu);

        FileMenu.setMnemonic('F');
        FileMenu.setText(bundle.getString("FICHIER")); // NOI18N

        jMenuItem1.setText(bundle.getString("NOUVEAU")); // NOI18N
        FileMenu.add(jMenuItem1);

        jMenuItem2.setText(bundle.getString("MODIFIER")); // NOI18N
        FileMenu.add(jMenuItem2);
        FileMenu.add(jSeparator15);

        ImportMenuItem.setText(bundle.getString("IMPORT")); // NOI18N
        ImportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(ImportMenuItem);
        FileMenu.add(jSeparator10);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText(bundle.getString("QUITTER")); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        FileMenu.add(jMenuItem4);

        menuBar.add(FileMenu);

        EditMenu.setMnemonic('E');
        EditMenu.setText(bundle.getString("EDITION")); // NOI18N

        undoMenuItem.setText(bundle.getString("UNDO")); // NOI18N
        EditMenu.add(undoMenuItem);

        redoMenuItem.setText(bundle.getString("REDO")); // NOI18N
        EditMenu.add(redoMenuItem);
        EditMenu.add(jSeparator1);

        cutMenuItem.setText(bundle.getString("COUPER")); // NOI18N
        EditMenu.add(cutMenuItem);

        copyMenuItem.setText(bundle.getString("COPIER")); // NOI18N
        EditMenu.add(copyMenuItem);

        pasteMenuItem.setText(bundle.getString("COLLER")); // NOI18N
        EditMenu.add(pasteMenuItem);
        EditMenu.add(jSeparator11);

        searchMenuItem.setText(bundle.getString("RECHERCHE")); // NOI18N
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        EditMenu.add(searchMenuItem);

        menuBar.add(EditMenu);

        ProductMenu.setMnemonic('P');
        ProductMenu.setText(bundle.getString("PRODUIT")); // NOI18N

        listProductMenuItem.setText(bundle.getString("LISTE DES PRODUITS")); // NOI18N
        listProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(listProductMenuItem);
        ProductMenu.add(jSeparator2);

        newProductMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(newProductMenuItem);

        modifyProductMenuItem.setText(bundle.getString("MODIFIER")); // NOI18N
        modifyProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(modifyProductMenuItem);

        deleteProductMenuItem.setText(bundle.getString("SUPPRIMER")); // NOI18N
        deleteProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(deleteProductMenuItem);

        consultMenuItem.setText(bundle.getString("CONSULTATION")); // NOI18N
        consultMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(consultMenuItem);
        ProductMenu.add(jSeparator3);

        statisticProductMenuItem.setText(bundle.getString("SATISTIQUE")); // NOI18N
        ProductMenu.add(statisticProductMenuItem);

        stockProductMenuItem.setText(bundle.getString("STOCK")); // NOI18N
        ProductMenu.add(stockProductMenuItem);

        searchProductMenuItem.setText(bundle.getString("RECHERCHE")); // NOI18N
        searchProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(searchProductMenuItem);

        menuBar.add(ProductMenu);

        ProviderMenu.setMnemonic('S');
        ProviderMenu.setText(bundle.getString("FOURNISSEUR")); // NOI18N

        listProviderMenuItem.setText(bundle.getString("LISTE DES FOURNISSEURS")); // NOI18N
        listProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(listProviderMenuItem);
        ProviderMenu.add(jSeparator4);

        newProviderMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(newProviderMenuItem);

        modifyProviderMenuItem.setText(bundle.getString("MODIFIER")); // NOI18N
        modifyProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(modifyProviderMenuItem);

        deleteProviderMenuItem.setText(bundle.getString("SUPPRIMER")); // NOI18N
        deleteProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(deleteProviderMenuItem);

        consultProviderMenuItem5.setText(bundle.getString("CONSULTATION")); // NOI18N
        consultProviderMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultProviderMenuItem5ActionPerformed(evt);
            }
        });
        ProviderMenu.add(consultProviderMenuItem5);
        ProviderMenu.add(jSeparator6);

        providerSituationMenuItem.setText(bundle.getString("SITUATION")); // NOI18N
        providerSituationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                providerSituationMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(providerSituationMenuItem);

        jMenu1.setText(bundle.getString("VERSEMENT")); // NOI18N

        nouveauVersementFournisseurMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        nouveauVersementFournisseurMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauVersementFournisseurMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(nouveauVersementFournisseurMenuItem);

        chercherversementMenuItem.setText(bundle.getString("CHERCHER VERSEMENT")); // NOI18N
        jMenu1.add(chercherversementMenuItem);

        ProviderMenu.add(jMenu1);

        buyPerProviderMenuItem.setText(bundle.getString("ACHAT PAR FOURNISSEUR")); // NOI18N
        buyPerProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyPerProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(buyPerProviderMenuItem);

        providerSearchMenuItem.setText(bundle.getString("RECHERCHE")); // NOI18N
        providerSearchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                providerSearchMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(providerSearchMenuItem);

        menuBar.add(ProviderMenu);

        CustomerMenu.setMnemonic('C');
        CustomerMenu.setText(bundle.getString("CLIENT")); // NOI18N

        listCustomerMenuItem.setText(bundle.getString("LISTE DES CLIENTS")); // NOI18N
        listCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(listCustomerMenuItem);
        CustomerMenu.add(jSeparator5);

        newCustomerMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(newCustomerMenuItem);

        modifyCustomerMenuItem.setText(bundle.getString("MODIFIER")); // NOI18N
        modifyCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(modifyCustomerMenuItem);

        deleteCustomerMenuItem.setText(bundle.getString("SUPPRIMER")); // NOI18N
        deleteCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(deleteCustomerMenuItem);

        consultCustomerMenuItem.setText(bundle.getString("CONSULTATION")); // NOI18N
        consultCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(consultCustomerMenuItem);
        CustomerMenu.add(jSeparator7);

        customerSituationMenuItem.setText(bundle.getString("SITUATION")); // NOI18N
        customerSituationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSituationMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(customerSituationMenuItem);

        jMenu2.setText(bundle.getString("VERSEMENT")); // NOI18N

        newWidthDrawelMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newWidthDrawelMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWidthDrawelMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(newWidthDrawelMenuItem);

        searchWidthDrawelMenuItem.setText(bundle.getString("CHERCHER")); // NOI18N
        jMenu2.add(searchWidthDrawelMenuItem);

        CustomerMenu.add(jMenu2);

        sellsPerCustomerMenuItem.setText(bundle.getString("VENTES PAR CLIENT")); // NOI18N
        sellsPerCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellsPerCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(sellsPerCustomerMenuItem);

        customerSearchMenuItem.setText(bundle.getString("RECHERCHE")); // NOI18N
        customerSearchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(customerSearchMenuItem);

        menuBar.add(CustomerMenu);

        SellMenu.setMnemonic('A');
        SellMenu.setText(bundle.getString("ACHAT")); // NOI18N

        listBuyMenuItem.setText(bundle.getString("LISTE D'ACHATS")); // NOI18N
        listBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBuyMenuItemActionPerformed(evt);
            }
        });
        SellMenu.add(listBuyMenuItem);
        SellMenu.add(jSeparator8);

        newBuyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, 0));
        newBuyMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBuyMenuItemActionPerformed(evt);
            }
        });
        SellMenu.add(newBuyMenuItem);

        jMenu6.setText(bundle.getString("RERTOUR")); // NOI18N

        listReturnSellMenuItem.setText(bundle.getString("LISTE")); // NOI18N
        listReturnSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listReturnSellMenuItemActionPerformed(evt);
            }
        });
        jMenu6.add(listReturnSellMenuItem);

        retourAchatMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        retourAchatMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourAchatMenuItemActionPerformed(evt);
            }
        });
        jMenu6.add(retourAchatMenuItem);

        SellMenu.add(jMenu6);

        deletedModifiedBUY.setText(bundle.getString("ACHATS SUPP OU MODIFIER")); // NOI18N
        deletedModifiedBUY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedModifiedBUYActionPerformed(evt);
            }
        });
        SellMenu.add(deletedModifiedBUY);

        menuBar.add(SellMenu);

        BuyMenu.setMnemonic('V');
        BuyMenu.setText(bundle.getString("VENTE")); // NOI18N

        listSellMenuItem.setText(bundle.getString("LISTE DE VENTES")); // NOI18N
        listSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(listSellMenuItem);
        BuyMenu.add(jSeparator9);

        newSellMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, 0));
        newSellMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        newSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(newSellMenuItem);

        jMenu7.setText(bundle.getString("RETOUR")); // NOI18N

        listRetrunBuyMenuItem.setText(bundle.getString("LISTES")); // NOI18N
        listRetrunBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listRetrunBuyMenuItemActionPerformed(evt);
            }
        });
        jMenu7.add(listRetrunBuyMenuItem);

        retourVenteMenuItem.setText(bundle.getString("NOUVEAU")); // NOI18N
        retourVenteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourVenteMenuItemActionPerformed(evt);
            }
        });
        jMenu7.add(retourVenteMenuItem);

        BuyMenu.add(jMenu7);

        compoirSellMenuItem.setText(bundle.getString("VENTE COMPTOIR")); // NOI18N
        compoirSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compoirSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(compoirSellMenuItem);

        deletedSellMenuItem.setText(bundle.getString("VENTES SUPP OU MODIFIER")); // NOI18N
        deletedSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(deletedSellMenuItem);

        menuBar.add(BuyMenu);

        CostsMenu.setText(bundle.getString("FRAIS")); // NOI18N

        jMenu4.setText(bundle.getString("PERSONNE")); // NOI18N

        jMenuItem7.setText(bundle.getString("LISTE PERSONNE")); // NOI18N
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem6.setText(bundle.getString("NOUVEAU")); // NOI18N
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        CostsMenu.add(jMenu4);
        CostsMenu.add(jSeparator16);

        jMenu5.setText(bundle.getString("LISTE FRAIS")); // NOI18N

        jMenuItem10.setText("قائمة");
        jMenu5.add(jMenuItem10);

        CostsMenu.add(jMenu5);

        jMenuItem5.setText(bundle.getString("NOUVEAU")); // NOI18N
        CostsMenu.add(jMenuItem5);

        jMenuItem8.setText(bundle.getString("MODIFIER")); // NOI18N
        CostsMenu.add(jMenuItem8);

        jMenuItem9.setText(bundle.getString("SUPPRIMER")); // NOI18N
        CostsMenu.add(jMenuItem9);

        menuBar.add(CostsMenu);

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("MessageBundle_ar_AR"); // NOI18N
        LostsMenu.setText(bundle1.getString("PERTE")); // NOI18N
        menuBar.add(LostsMenu);

        mouvementMenu.setMnemonic('M');
        mouvementMenu.setText(bundle.getString("MOUVEMENTS")); // NOI18N

        dayMouvementMenuItem.setText(bundle.getString("JOURNAL COTIDIEN")); // NOI18N
        dayMouvementMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayMouvementMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(dayMouvementMenuItem);
        mouvementMenu.add(jSeparator13);

        graphRecetteMenuItem.setText(bundle.getString("GRAPHE DES RECETTES")); // NOI18N
        graphRecetteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphRecetteMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(graphRecetteMenuItem);
        mouvementMenu.add(jSeparator17);

        BenificeMenuItem.setText(bundle1.getString("BENIFICES")); // NOI18N
        BenificeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BenificeMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(BenificeMenuItem);

        DayBeneficeMenuItem.setText(bundle1.getString("PROFIT AUJOURD'HUI")); // NOI18N
        DayBeneficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayBeneficeMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(DayBeneficeMenuItem);

        WeekBeneficeMenuItem.setText(bundle1.getString("PROFIT CETTE SEMAINE")); // NOI18N
        WeekBeneficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeekBeneficeMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(WeekBeneficeMenuItem);

        MonthBeneficeMenuItem.setText(bundle1.getString("PROFIT DE CE MOIS")); // NOI18N
        MonthBeneficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthBeneficeMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(MonthBeneficeMenuItem);

        YearBeneficeMenuItem.setText(bundle1.getString("PROFIT DE CETTE ANNÉE")); // NOI18N
        YearBeneficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearBeneficeMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(YearBeneficeMenuItem);

        menuBar.add(mouvementMenu);

        toolsMenu.setMnemonic('O');
        toolsMenu.setText(bundle.getString("OUTILS")); // NOI18N

        saveDataBaseMenuItem.setText(bundle.getString("SAUVEGARDER")); // NOI18N
        saveDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(saveDataBaseMenuItem);

        restorDataBaseMenuItem.setText(bundle.getString("RESTAURER")); // NOI18N
        restorDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restorDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(restorDataBaseMenuItem);

        emtyDataBaseMenuItem.setText(bundle.getString("BASE DE DONNÉE VIDE")); // NOI18N
        emtyDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emtyDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(emtyDataBaseMenuItem);

        parameterMenuItem.setText(bundle.getString("PARAMÈTRES")); // NOI18N
        toolsMenu.add(parameterMenuItem);
        toolsMenu.add(jSeparator14);

        jMenuItemSaveProcTrig.setText(bundle.getString("SAUVEGARDER PROC & TRIG")); // NOI18N
        jMenuItemSaveProcTrig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveProcTrigActionPerformed(evt);
            }
        });
        toolsMenu.add(jMenuItemSaveProcTrig);

        archiveMenuItem.setText(bundle.getString("ARCHIVER")); // NOI18N
        toolsMenu.add(archiveMenuItem);

        createTables.setText(bundle.getString("CREER LES TABLES")); // NOI18N
        createTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTablesActionPerformed(evt);
            }
        });
        toolsMenu.add(createTables);

        menuBar.add(toolsMenu);

        helpMenu.setMnemonic('D');
        helpMenu.setText(bundle.getString("AIDE")); // NOI18N

        jMenuItem3.setText(bundle.getString("A PROPOS DE")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        helpMenu.add(jMenuItem3);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modifyCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_modifyCustomerMenuItemActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        processQuit();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void buyPerProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyPerProviderMenuItemActionPerformed
        
        balanceFournisseur f = new balanceFournisseur();
        f.setVisible(true);
    }//GEN-LAST:event_buyPerProviderMenuItemActionPerformed

    private void newBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBuyMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.BUY, FileProcess.CREATE);
            }
            
        });
    }//GEN-LAST:event_newBuyMenuItemActionPerformed

    private void newSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSellMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.SELL, FileProcess.CREATE);
            }
            
        });
        //Thread t = new Thread(new messageLoop(Operation.SELL, FileProcess.CREATE));
        //t.start();
    }//GEN-LAST:event_newSellMenuItemActionPerformed

    private void retourAchatMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourAchatMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.BUYBACK, FileProcess.CREATE);
            }
            
        });
        
    }//GEN-LAST:event_retourAchatMenuItemActionPerformed

    private void retourVenteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourVenteMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.SELLBACK, FileProcess.CREATE);
            }
            
        });
        //Thread t = new Thread(new messageLoop(Operation.BUYBACK, FileProcess.CREATE));
        //t.start();
    }//GEN-LAST:event_retourVenteMenuItemActionPerformed

    private void listSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listSellMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.SELL);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listSellMenuItemActionPerformed

    private void listBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBuyMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.BUY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listBuyMenuItemActionPerformed

    private void listReturnSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listReturnSellMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.SELLBACK);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listReturnSellMenuItemActionPerformed

    private void listRetrunBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listRetrunBuyMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.BUYBACK);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listRetrunBuyMenuItemActionPerformed

    private void compoirSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compoirSellMenuItemActionPerformed
        ComptoirFrame f = new ComptoirFrame();
        f.setVisible(true);
    }//GEN-LAST:event_compoirSellMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         processQuit();    
    }//GEN-LAST:event_formWindowClosing

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MultiSearchDialog f = new MultiSearchDialog(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void restorDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restorDataBaseMenuItemActionPerformed
        processRestoreDataBase();
    }//GEN-LAST:event_restorDataBaseMenuItemActionPerformed

    private void saveDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBaseMenuItemActionPerformed
        processSaveDataBase();
    }//GEN-LAST:event_saveDataBaseMenuItemActionPerformed

    private void dayMouvementMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayMouvementMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DayMouvements f = new DayMouvements(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_dayMouvementMenuItemActionPerformed

    private void graphRecetteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphRecetteMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RecetteCotidienne f = new RecetteCotidienne(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_graphRecetteMenuItemActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        processKeyPressed(evt);
    }//GEN-LAST:event_formKeyPressed

    private void listProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListFrame f = new ListFrame(parentFrame,Operation.PRODUCT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listProductMenuItemActionPerformed

    private void listProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListFrame f = new ListFrame(parentFrame,Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listProviderMenuItemActionPerformed

    private void listCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {    
                ListFrame f = new ListFrame(parentFrame,Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listCustomerMenuItemActionPerformed

    private void sellsPerCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellsPerCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                customerSells f = new customerSells(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_sellsPerCustomerMenuItemActionPerformed

    private void customerSituationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSituationMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {    
                Situation f = new Situation(parentFrame,Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_customerSituationMenuItemActionPerformed

    private void providerSituationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_providerSituationMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                Situation f = new Situation(parentFrame,Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_providerSituationMenuItemActionPerformed

    private void newProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                ProductDialog f = new ProductDialog(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newProductMenuItemActionPerformed

    private void modifyProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_modifyProductMenuItemActionPerformed

    private void deleteProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteProductMenuItemActionPerformed

    private void newProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                NewOperatorDialog f = new NewOperatorDialog(parentFrame,
                                                    Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newProviderMenuItemActionPerformed

    private void newCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewOperatorDialog f = new NewOperatorDialog(parentFrame,
                                                    Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newCustomerMenuItemActionPerformed

    private void deletedSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedSellMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                RestoreOperationDialog dlg = new RestoreOperationDialog(parentFrame
                                                            ,Operation.SELL);
                dlg.setVisible(true);
            }
        });
        
    }//GEN-LAST:event_deletedSellMenuItemActionPerformed

    private void deletedModifiedBUYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedModifiedBUYActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                RestoreOperationDialog dlg = new RestoreOperationDialog(parentFrame
                                                            ,Operation.BUY);
                dlg.setVisible(true);
            }
        });        
    }//GEN-LAST:event_deletedModifiedBUYActionPerformed

    private void jMenuItemSaveProcTrigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveProcTrigActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog fr;
                fr = new SaveProcTrigDialog(parentFrame);
                fr.setVisible(true);
            }
        });
    }//GEN-LAST:event_jMenuItemSaveProcTrigActionPerformed

    private void emtyDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emtyDataBaseMenuItemActionPerformed
//        JDBCAdapter table = JDBCAdapter.connect();
//        table.executeQuery("CALL L(0)");
    }//GEN-LAST:event_emtyDataBaseMenuItemActionPerformed

    private void ImportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportMenuItemActionPerformed
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                Importation f = new Importation();
                createAndShowGUI(f,java.util.ResourceBundle.getBundle("MessageBundle").getString("IMPORTATION"));
            }
        });        //importer des fichiers specifiques d'une autre base de données
        
    }//GEN-LAST:event_ImportMenuItemActionPerformed

    private void createTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTablesActionPerformed
        JDBCAdapter createTable = JDBCAdapter.connect();
        createTable.executeUpdate("CALL LEAY(0);");
    }//GEN-LAST:event_createTablesActionPerformed

    private void consultMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });        
    }//GEN-LAST:event_consultMenuItemActionPerformed

    private void modifyProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_modifyProviderMenuItemActionPerformed

    private void deleteProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteProviderMenuItemActionPerformed

    private void consultProviderMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultProviderMenuItem5ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_consultProviderMenuItem5ActionPerformed

    private void deleteCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteCustomerMenuItemActionPerformed

    private void consultCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_consultCustomerMenuItemActionPerformed

    private void searchProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.PRODUCT);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_searchProductMenuItemActionPerformed

    private void providerSearchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_providerSearchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.PROVIDER);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_providerSearchMenuItemActionPerformed

    private void customerSearchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.CUSTOMER);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_customerSearchMenuItemActionPerformed

    private void nouveauVersementFournisseurMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauVersementFournisseurMenuItemActionPerformed
        Verser dlg= new Verser(parentFrame,Operation.PROVIDER);
        dlg.setVisible(true);
    }//GEN-LAST:event_nouveauVersementFournisseurMenuItemActionPerformed

    private void newWidthDrawelMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWidthDrawelMenuItemActionPerformed
        Verser dlg= new Verser(parentFrame,Operation.CUSTOMER);
        dlg.setVisible(true);
    }//GEN-LAST:event_newWidthDrawelMenuItemActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        About f=new About(parentFrame);
        f.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        PersonneDialog d=new PersonneDialog(parentFrame,FileProcess.CREATE);
        d.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        ListFrame d=new ListFrame(parentFrame,Operation.PERSONNE);
        d.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void BenificeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BenificeMenuItemActionPerformed
        String query = "SELECT SUM(lvente.`QTEA` * lvente.`QTUA` * "
                +"(lvente.`PRIXA` - produit.`PRIXA`)) as montant "
                +"FROM LVENTE LEFT JOIN PRODUIT ON (PRODUIT.`IDP`=LVENTE.`IDP`);";
        JDBCAdapter table = JDBCAdapter.connect();
        table.executeQuery(query);
        if (table.ErrorExists())
            JOptionPane.showMessageDialog(parentFrame, table.getErrorMessage()
                                        +"\n" + table.getErrorCause());
        else
            JOptionPane.showMessageDialog(parentFrame,java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("LES PROFITS JUSQU'A CE JOUR SONT :")
                + table.getValueAt(0, 0));
    }//GEN-LAST:event_BenificeMenuItemActionPerformed

    private void DayBeneficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayBeneficeMenuItemActionPerformed
        executeQuery(0);
    }//GEN-LAST:event_DayBeneficeMenuItemActionPerformed

    private void WeekBeneficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeekBeneficeMenuItemActionPerformed
        executeQuery(1);
    }//GEN-LAST:event_WeekBeneficeMenuItemActionPerformed

    private void MonthBeneficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthBeneficeMenuItemActionPerformed
        executeQuery(2);
    }//GEN-LAST:event_MonthBeneficeMenuItemActionPerformed

    private void YearBeneficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearBeneficeMenuItemActionPerformed
        executeQuery(3);
    }//GEN-LAST:event_YearBeneficeMenuItemActionPerformed

    private void executeQuery(int type){
        String clause= ";";
        String message = java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("LES PROFITS DE ");
        switch (type){
            case 0://profit journalier
                clause =" Where vente.`D`=CURDATE();";
                message += java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("CE JOUR :");
                break;
            case 1://profit hebdomadaire
                clause =" Where WEEK(vente.`D`)=WEEK(CURDATE());";
                message += java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("CETTE SEMAINE :");
                break;
            case 2://profit mois
                clause =" Where MONTH(vente.`D`)=MONTH(CURDATE());";
                message += java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("CE MOIS :");
                break;
            case 3://profit annuel
                clause =" Where YEAR(vente.`D`)=YEAR(CURDATE());";
                message += java.util.ResourceBundle.getBundle("MessageBundle_ar_AR").getString("CETTE ANNÉE :");
                break;
                
        }
        String query = "SELECT SUM(lvente.`QTEA` * lvente.`QTUA` * "
                + "(lvente.`PRIXA` - produit.`PRIXA`)) "  //NOI18N
                +"FROM lvente left join (vente, produit) " 
                +"on (lvente.`IDA`=vente.`IDA` and produit.`IDP`=lvente.`IDP`)"
                +clause;
        JDBCAdapter table = JDBCAdapter.connect();
        table.executeQuery(query);
        if (table.ErrorExists())
            JOptionPane.showMessageDialog(parentFrame, table.getErrorMessage()
                                        +"\n" + table.getErrorCause());
        else
            JOptionPane.showMessageDialog(parentFrame,message+
                "\n" + table.getValueAt(0, 0));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BenificeMenuItem;
    private javax.swing.JMenu BuyMenu;
    private javax.swing.JMenu CostsMenu;
    private javax.swing.JMenu CustomerMenu;
    private javax.swing.JMenuItem DayBeneficeMenuItem;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem ImportMenuItem;
    private javax.swing.JMenu LostsMenu;
    private javax.swing.JMenuItem MonthBeneficeMenuItem;
    private javax.swing.JMenu ProductMenu;
    private javax.swing.JMenu ProviderMenu;
    private javax.swing.JMenu SellMenu;
    private javax.swing.JMenuItem WeekBeneficeMenuItem;
    private javax.swing.JMenuItem YearBeneficeMenuItem;
    private javax.swing.JMenuItem archiveMenuItem;
    private javax.swing.JMenuItem buyPerProviderMenuItem;
    private javax.swing.JMenuItem chercherversementMenuItem;
    private javax.swing.JMenuItem compoirSellMenuItem;
    private javax.swing.JMenuItem consultCustomerMenuItem;
    private javax.swing.JMenuItem consultMenuItem;
    private javax.swing.JMenuItem consultProviderMenuItem5;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem createTables;
    private javax.swing.JMenuItem customerSearchMenuItem;
    private javax.swing.JMenuItem customerSituationMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem dayMouvementMenuItem;
    private javax.swing.JMenuItem deleteCustomerMenuItem;
    private javax.swing.JMenuItem deleteProductMenuItem;
    private javax.swing.JMenuItem deleteProviderMenuItem;
    private javax.swing.JMenuItem deletedModifiedBUY;
    private javax.swing.JMenuItem deletedSellMenuItem;
    public static javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem emtyDataBaseMenuItem;
    private javax.swing.JMenuItem graphRecetteMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemSaveProcTrig;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator16;
    private javax.swing.JPopupMenu.Separator jSeparator17;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JMenuItem listBuyMenuItem;
    private javax.swing.JMenuItem listCustomerMenuItem;
    private javax.swing.JMenuItem listProductMenuItem;
    private javax.swing.JMenuItem listProviderMenuItem;
    private javax.swing.JMenuItem listRetrunBuyMenuItem;
    private javax.swing.JMenuItem listReturnSellMenuItem;
    private javax.swing.JMenuItem listSellMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem modifyCustomerMenuItem;
    private javax.swing.JMenuItem modifyProductMenuItem;
    private javax.swing.JMenuItem modifyProviderMenuItem;
    private javax.swing.JMenu mouvementMenu;
    private javax.swing.JMenuItem newBuyMenuItem;
    private javax.swing.JMenuItem newCustomerMenuItem;
    private javax.swing.JMenuItem newProductMenuItem;
    private javax.swing.JMenuItem newProviderMenuItem;
    private javax.swing.JMenuItem newSellMenuItem;
    private javax.swing.JMenuItem newWidthDrawelMenuItem;
    private javax.swing.JMenuItem nouveauVersementFournisseurMenuItem;
    private javax.swing.JMenuItem parameterMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem providerSearchMenuItem;
    private javax.swing.JMenuItem providerSituationMenuItem;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenuItem restorDataBaseMenuItem;
    private javax.swing.JMenuItem retourAchatMenuItem;
    private javax.swing.JMenuItem retourVenteMenuItem;
    private javax.swing.JMenuItem saveDataBaseMenuItem;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JMenuItem searchProductMenuItem;
    private javax.swing.JMenuItem searchWidthDrawelMenuItem;
    private javax.swing.JMenuItem sellsPerCustomerMenuItem;
    private javax.swing.JMenuItem statisticProductMenuItem;
    private javax.swing.JMenuItem stockProductMenuItem;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JMenuItem undoMenuItem;
    // End of variables declaration//GEN-END:variables
   
    private void processQuit() {
        JInternalFrame frame;
        if (Demarrage.getFrame("QUIT") != null){
            frame = Demarrage.getInternalFrame("QUIT");
        }else{
            frame = new QuitFrame();
        }
        //FrameAdapter.centerFrame(frame);
        frame.setVisible(true);
        centerFrame(frame);
        desktopPane.add(frame);
        frame.requestFocusInWindow();
    }

    private void processRestoreDataBase() {
        JInternalFrame fr;
        fr = new RestoreInternalFrame();
        //FrameAdapter.centerFrame(fr);
        fr.setVisible(true);
        centerFrame(fr);
        desktopPane.add(fr);
        fr.requestFocusInWindow();
    }

    private void processSaveDataBase() {
        JDialog f;
        f = new SaveFrame(parentFrame);
        f.setVisible(true);
    }

    private void processKeyPressed(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ALT){
            this.FileMenu.setVisible(true);
        }
    }    
/**
 * Centers the internal frame in the desktop pane.
 * @param frame the internal frame to be centered.
 */
    private void centerFrame(JInternalFrame frame) {
        int d_width = desktopPane.getWidth();
        int d_height = desktopPane.getHeight();
        int f_width = frame.getWidth();
        int f_height = frame.getHeight();
        int x = (d_width - f_width) / 2;
        int y = (d_height - f_height) / 2;
        frame.setLocation(x, y);
    }

    private static class messageLoop {
        OperationWindow f;
        private messageLoop(Operation op, FileProcess fp) {
            f = new OperationWindow(parentFrame,op,fp);
            f.setVisible(true);
        }
    }
    private void createAndShowGUI(JPanel panel, String title) {
        //Create and set up the window.
        JFrame frame = new JFrame(title);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        //Add content to the window.
        frame.add(panel);

        //Display the window.
        frame.pack();
        FrameAdapter.centerFrame(frame);
        frame.setVisible(true);
    }
}
